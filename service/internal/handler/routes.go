// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	getsnaps "gews_more/service/internal/handler/getsnaps"
	login "gews_more/service/internal/handler/login"
	register "gews_more/service/internal/handler/register"
	registercode "gews_more/service/internal/handler/registercode"
	snappost "gews_more/service/internal/handler/snappost"
	trending "gews_more/service/internal/handler/trending"
	"gews_more/service/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Logincheck},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/",
					Handler: login.LoginHandler(serverCtx),
				},
			}...,
		),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Getcode},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/user/registercode",
					Handler: registercode.RegistercodeHandler(serverCtx),
				},
			}...,
		),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Registercheck},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/user/register",
					Handler: register.RegisterHandler(serverCtx),
				},
			}...,
		),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/snaps",
				Handler: getsnaps.GetsnapsHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/snappost",
				Handler: snappost.PostsnapHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/trending",
				Handler: trending.TrendingHandler(serverCtx),
			},
		},
	)
}
